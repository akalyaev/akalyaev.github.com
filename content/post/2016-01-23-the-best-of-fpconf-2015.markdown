---
categories:
- talks
- programming
comments: true
date: 2016-01-23T11:15:07Z
title: Лучшие доклады fpconf 2015
slug: the-best-of-fpconf-2015
---

В прошлом году состоялась первая конференция, посвященная функциональному
программированию - [fpconf](http://fpconf.ru/). Судя по рассказам моих
знакомых, подобралась неплохая компания и было несколько действительно крутых
докладов. К счастью, вам не надо смотреть все выложенные видео, чтобы найти те
самые доклады.

_Дисклеймер: выбранные материалы и степень их крутости отражают личное мнение
автора. Ваше мнение может отличаться._

<!--more-->

# 1. Clojure Data DSL's для web разработки

Николай Рыжиков (46 мин)

<iframe width="560" height="315" src="https://www.youtube.com/embed/urQ5o754TU4" frameborder="0" allowfullscreen></iframe>

Код и данные, как Инь и Янь, и граница между ними при пристальном взгляде начинает исчезать. На примере web стэка для clojure мы познакомимся c Data DSL - hiccup, honeysql, prismatic schema, в режиме реального времени попробуем написать свои DSL и познать Дао.

# 2. Фронтенд без грусти

Никита Прокопов (50 мин)

<iframe width="560" height="315" src="https://www.youtube.com/embed/cRWrrHPrk9g" frameborder="0" allowfullscreen></iframe>

Писать веб-приложение — то еще занятие: медленно, сложно, да и платформа скорее мешает, чем помогает. В докладе мы ответим:

- Как функциональный подход помогает делать веб-приложения?
- Может ли база данных быть иммутабельной?
- Зачем вообще на фронте база данных?
- Что интересного можно сделать с такими инструментами?

Причем не вообще, а на конкретных примерах ClojureScript и DataScript.

# 3. Scala performance для сомневающихся

Роман Гребенников (48 мин)

<iframe width="560" height="315" src="https://www.youtube.com/embed/__PLkxx6Yko" frameborder="0" allowfullscreen></iframe>

Язык Scala нынче модный: тут вам и паттерн матчинг, и рекурсия, и коллекции, обильно приправленные лямбдами, а также много других страшных слов из мира функционального программирования, для понимания которых не нужна ученая степень по математике. И все эти плюшки органично переплетены в такой язык, начав писать на котором, очень тяжело перестать.
Но волшебство функциональной легкости заканчивается с фразой "а почему я переписал 100 строк лапши на Java в однострочник на Scala, но оно стало работать в 3 раза медленнее?", и мечта о прекрасном языке превращается в тыкву. Суровая реальность грязным сапогом как бы говорит нам, что абстракции языков высокого уровня могут скрывать монстров и всё удобство имеет свою цену. И если вы делаете на Scala не простое CRUD-приложение, а что-то, хоть отдаленно связанное с нагрузкой, необходимо хорошо понимать, во что именно вам обходятся все вот эти монады-шмонады.
Доклад может открыть глаза на возможные подводные камни производительности людям, практикующим программирование на Scala. В процессе будет рассказано:

- об интеграции jmh и sbt;
- о том, как заставить scalac рассказывать о том, что он там наоптимизировал;
- о тайнах паттерн-матчинга, хвостовой рекурсии и scala-коллекций;
- об умном HotSpot, который геройски все это оптимизирует.

_P.S. Этот доклад Роман читает не впервые, так что возможно вы его уже смотрели._

# 4. Самурайский путь молодого Scala-программиста

Сергей Лобин (45 мин)

<iframe width="560" height="315" src="https://www.youtube.com/embed/Pu3D5GQ6UEg" frameborder="0" allowfullscreen></iframe>

История о том:

- Как в "Спутнике" появилась Scala.
- Как написать функциональный поиск.
- Какие мы набили шишки на пути в бой.
- Правда ли что Scala такая прожорливая.
- Плюсы и минусы разработки на Scala.

# 5. F# TYPE PROVIDERS: THE CURRENT STATE

Сергей Тихон (33 мин)

<iframe width="560" height="315" src="https://www.youtube.com/embed/gsrSoZQUV-A" frameborder="0" allowfullscreen></iframe>

F# Type Providers это механизм позволяющий упростить интеграцию кода и данных и является альтернативой подходу кодо-генерации. В докладе будут рассмотрены:

- Code Quotations и принципы работы type provider'ов.
- Обзор существующих type provider'ов.
- Особенности разработки собственных type provider'ов.
- Нововведения F# 4.0 для type provider'ов.
